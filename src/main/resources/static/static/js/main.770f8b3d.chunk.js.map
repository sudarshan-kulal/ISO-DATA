{"version":3,"sources":["serviceWorker.js","assets/loading.gif","Components/Homepage.js","Constants.js","Components/Messagebreaker.js","Routing.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Homepage","props","authenticate","authJson","responseCode","state","fields","dE","console","log","Axios","request","method","data","url","remoteApi","then","response","setState","navigate","loading","alert","status","listdata","backendStatus","catch","err","errors","handleChange","bind","submitForm","e","this","target","name","value","preventDefault","validateForm","formIsValid","items","map","item","style","width","margin","padding","background","minHeight","boxSizing","textAlign","color","fontSize","marginLeft","to","htmlFor","id","onChange","type","onKeyUp","required","role","borderRadius","onClick","src","loadingImg","Component","Messagebreaker","Main","exact","path","component","App","className","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.770f8b3d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.6197f8ed.gif\";","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { getResponseMsg } from \"../Constants\";\r\nimport loadingImg from '../assets/loading.gif';\r\n\r\nexport default class Homepage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigate: false,\r\n            // username: \"\",\r\n            // password: \"\",\r\n            fields: {},\r\n            errors: {},\r\n            listdata:[],\r\n            backendStatus:'',\r\n            loading: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n\r\n    }\r\n\r\n    // handleChange = (e) => {\r\n    //   this.setState({\r\n    //     [e.target.name]: e.target.value,\r\n    //   });\r\n    // };\r\n\r\n    handleChange(e) {\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n            fields\r\n        });\r\n\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = this.state.fields;\r\n            \r\n            if (!fields[\"responseCode\"]) {\r\n                fields[\"responseCode\"] = \"\";\r\n\r\n            }\r\n            if (!fields[\"dE\"]) {\r\n                fields[\"dE\"] = \"\";\r\n\r\n            }\r\n\r\n            this.setState({ fields: fields });\r\n            //alert(\"Form submitted\");\r\n            this.authenticate();\r\n        }\r\n\r\n    }\r\n\r\n    validateForm() {\r\n\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //alert(\"UserName:::\"+fields.username);\r\n        //alert(\"Password:::\"+fields.password);\r\n        \r\n\r\n        if (!fields[\"responseCode\"]) {\r\n            formIsValid = false;\r\n            alert(\"Kindly Enter Response Code!\");\r\n            //errors[\"username\"] = \"*Please enter your username.\";\r\n        }\r\n         if (!fields[\"dE\"]) {\r\n             formIsValid = false;\r\n             alert(\"Kindly Choose DE!\");\r\n             this.state.fields.dE = \"DE-39\";\r\n             //errors[\"username\"] = \"*Please enter your username.\";\r\n         }\r\n\r\n        // if (typeof fields[\"username\"] !== \"undefined\") {\r\n        //   if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\r\n        //     formIsValid = false;\r\n        //     errors[\"username\"] = \"*Please enter alphabet characters only.\";\r\n        //   }\r\n        // }\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            errors: errors\r\n        });\r\n        return formIsValid;\r\n\r\n\r\n    }\r\n\r\n    authenticate = () => {\r\n        const authJson = {\r\n            responseCode: this.state.fields.responseCode,\r\n            dE:this.state.fields.dE\r\n        };\r\n\r\n        console.log(authJson)\r\n        Axios.request({\r\n            method: \"POST\",\r\n            data: authJson,\r\n            url: getResponseMsg\r\n        })\r\n            .then((response) => {\r\n                this.setState({ navigate: true, loading: true });\r\n                alert(\"Backend Processing Successful.\")\r\n                // localStorage.setItem(\"username\",this.state.fields.username)\r\n                // localStorage.setItem(\"token\",response.data.jwttoken);\r\n                // localStorage.setItem(\"logintime\",response.data.loginTime);\r\n                \r\n                if(response.status === 200) {\r\n                    this.setState({ navigate: true, loading: false });\r\n                    this.setState({ listdata: response.data.response,backendStatus:response.data.status  });\r\n                    console.log(\"Data---\",response.data.response);\r\n\r\n                }\r\n                \r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(\"Error Occurred. \", err);\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n         const { navigate } = this.state;\r\n         const items = this.state.listdata.map((item) =>\r\n         <li>{item}</li>\r\n       );\r\n        // here is the important part\r\n        // if (navigate) {\r\n        //   return <Redirect to=\"/dash\" push={true} />;\r\n        // }\r\n        const TodoComponent = {\r\n            width: \"500px\",\r\n            margin: \"40px auto\",\r\n            padding: \"50px auto\",\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            minHeight: \"200px\",\r\n            boxSizing: \"border-box\"\r\n           }\r\n           const buttonComponent = {\r\n            background: 'linear-gradient(45deg, #FE6B6B 30%, #FF8E46 90%)',\r\n            margin: \"10px 0 0px 200px\",\r\n            borderRadius: \"15px\"\r\n           }\r\n\r\n           const Header = {\r\n            padding: \"10px 20px\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"22px\"\r\n           }\r\n           const messageBreakerHeader = {\r\n            fontSize: \"12px\",\r\n            marginLeft: \"350px\"\r\n           }\r\n\r\n           const ErrorMessage = {\r\n            color: \"white\",\r\n            fontSize: \"13px\"\r\n           }\r\n        return (\r\n            <div style={TodoComponent}>\r\n               \r\n                <div style={Header}>\r\n                    Response Code Viewer\r\n                </div>\r\n                <div>\r\n                    <div style={messageBreakerHeader}>\r\n                        <Link to=\"/messageBreaker\">Go to Message Breaker</Link>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                           \r\n                            <label  htmlFor=\"responseCode\">Choose DataElements: &nbsp;</label>\r\n                            <select id=\"dE\" name=\"dE\" onChange={this.handleChange}>\r\n                            <option value=\"--\">-Data Element-</option>\r\n                            \r\n                                <option value=\"DE-4\">DE-4</option>\r\n                                <option value=\"DE-5\">DE-5</option>\r\n                                <option value=\"DE-6\">DE-6</option>\r\n                                <option value=\"DE-7\">DE-7</option>\r\n                                <option value=\"DE-8\">DE-8</option>\r\n                                <option value=\"DE-9\">DE-9</option>\r\n                                <option value=\"DE-10\">DE-10</option>\r\n                                <option value=\"DE-11\">DE-11</option>\r\n                                <option value=\"DE-12\">DE-12</option>\r\n                                <option value=\"DE-13\">DE-13</option>\r\n                                <option value=\"DE-14\">DE-14</option>\r\n                                <option value=\"DE-15\">DE-15</option>\r\n                                <option value=\"DE-16\">DE-16</option>\r\n                                <option value=\"DE-18\">DE-18</option>\r\n                                <option value=\"DE-19\">DE-19</option>\r\n                                <option value=\"DE-22\">DE-22</option>\r\n                                <option value=\"DE-23\">DE-23</option>\r\n                                <option value=\"DE-25\">DE-25</option>\r\n                                <option value=\"DE-28\">DE-28</option>\r\n                                <option value=\"DE-32\">DE-32</option>\r\n                                <option value=\"DE-33\">DE-33</option>\r\n                                <option value=\"DE-35\">DE-35</option>\r\n                                <option value=\"DE-39\">DE-37</option>\r\n                                <option value=\"DE-39\">DE-38</option>\r\n                                <option value=\"DE-39\">DE-39</option>\r\n                                <option value=\"DE-40\">DE-40</option>\r\n                                <option value=\"DE-41\">DE-41</option>\r\n                                <option value=\"DE-42\">DE-42</option>\r\n                                <option value=\"DE-43\">DE-43</option>\r\n                                <option value=\"DE-44\">DE-44</option>\r\n                                <option value=\"DE-45\">DE-45</option>\r\n                                <option value=\"DE-48\">DE-48</option>\r\n                                <option value=\"DE-49\">DE-49</option>\r\n                                <option value=\"DE-50\">DE-50</option>\r\n                                <option value=\"DE-51\">DE-51</option>\r\n                                <option value=\"DE-52\">DE-52</option>\r\n                                <option value=\"DE-55\">DE-55</option>\r\n                                <option value=\"DE-60\">DE-60</option>\r\n                                <option value=\"DE-61\">DE-61</option>\r\n                                <option value=\"DE-62\">DE-62</option>\r\n                                <option value=\"DE-63\">DE-63</option>\r\n                                <option value=\"DE-70\">DE-70</option>\r\n                                <option value=\"DE-90\">DE-90</option>\r\n                                <option value=\"DE-91\">DE-91</option>\r\n                                <option value=\"DE-95\">DE-95</option>\r\n                                <option value=\"DE-101\">DE-101</option>\r\n                                <option value=\"DE-102\">DE-102</option>\r\n                                <option value=\"DE-103\">DE-103</option>\r\n                                <option value=\"DE-104\">DE-104</option>\r\n                                <option value=\"DE-111\">DE-111</option>\r\n                                <option value=\"DE-119\">DE-119</option>\r\n                                <option value=\"DE-120\">DE-120</option>\r\n                                <option value=\"DE-121\">DE-121</option>\r\n                                <option value=\"DE-122\">DE-122</option>\r\n                                <option value=\"DE-123\">DE-123</option>\r\n                                <option value=\"DE-124\">DE-124</option>\r\n                                <option value=\"DE-125\">DE-125</option>\r\n                                <option value=\"DE-126\">DE-126</option>\r\n                                <option value=\"DE-127\">DE-127</option>\r\n                            </select>\r\n                            &nbsp;\r\n                            <input\r\n                                id=\"responseCode\"\r\n                                name=\"responseCode\"\r\n                                type=\"text\"\r\n                                onKeyUp={this.handleChange}\r\n                                required\r\n                                \r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <button\r\n                                role=\"button\"\r\n                                style={buttonComponent}\r\n                                //onClick={this.authenticate}\r\n                                onClick={this.submitForm}\r\n                            >\r\n                                Submit\r\n                                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div style={ErrorMessage}>\r\n                        {this.state.loading && <img src={loadingImg} />}\r\n                         <ul>{items}</ul> \r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"," const remoteApi = \"https://iso-data.herokuapp.com/\";\r\n\r\n//const remoteApi = \"https://localhost:8081/\";\r\n\r\nexport const version = \"Version 1.0.0\"\r\n\r\n//Response Api\r\nexport const getResponseMsg = remoteApi+\"api/getResponseMsg\";\r\n\r\n\r\n//Response Api\r\nexport const getResponseMsgBreaker = remoteApi+\"api/getMessage\";\r\n","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { getResponseMsgBreaker } from \"../Constants\";\r\nimport loadingImg from '../assets/loading.gif';\r\n\r\nexport default class Messagebreaker extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navigate: false,\r\n            // username: \"\",\r\n            // password: \"\",\r\n            fields: {},\r\n            errors: {},\r\n            listdata:[],\r\n            backendStatus:'',\r\n            loading: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n\r\n    }\r\n\r\n    // handleChange = (e) => {\r\n    //   this.setState({\r\n    //     [e.target.name]: e.target.value,\r\n    //   });\r\n    // };\r\n\r\n    handleChange(e) {\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n            fields\r\n        });\r\n\r\n    }\r\n\r\n    submitForm(e) {\r\n        e.preventDefault();\r\n        if (this.validateForm()) {\r\n            let fields = this.state.fields;\r\n            \r\n            if (!fields[\"responseCode\"]) {\r\n                fields[\"responseCode\"] = \"\";\r\n\r\n            }\r\n            if (!fields[\"dE\"]) {\r\n                fields[\"dE\"] = \"\";\r\n\r\n            }\r\n\r\n            this.setState({ fields: fields });\r\n            //alert(\"Form submitted\");\r\n            this.authenticate();\r\n        }\r\n\r\n    }\r\n\r\n    validateForm() {\r\n\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        //alert(\"UserName:::\"+fields.username);\r\n        //alert(\"Password:::\"+fields.password);\r\n        \r\n\r\n        if (!fields[\"responseCode\"]) {\r\n            formIsValid = false;\r\n            alert(\"Kindly Enter Response Code!\");\r\n            //errors[\"username\"] = \"*Please enter your username.\";\r\n        }\r\n         \r\n        // if (typeof fields[\"username\"] !== \"undefined\") {\r\n        //   if (!fields[\"username\"].match(/^[a-zA-Z ]*$/)) {\r\n        //     formIsValid = false;\r\n        //     errors[\"username\"] = \"*Please enter alphabet characters only.\";\r\n        //   }\r\n        // }\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            errors: errors\r\n        });\r\n        return formIsValid;\r\n\r\n\r\n    }\r\n\r\n    authenticate = () => {\r\n        const authJson = {\r\n            response: this.state.fields.responseCode\r\n        };\r\n\r\n        console.log(authJson)\r\n        Axios.request({\r\n            method: \"POST\",\r\n            data: authJson,\r\n            url: getResponseMsgBreaker\r\n        })\r\n            .then((response) => {\r\n                this.setState({ navigate: true, loading: true });\r\n                console.log(\"check\"+response.status);\r\n                console.log(\"check\"+response.responseCode);\r\n                alert(\"Backend Processing Successful.\")\r\n                // localStorage.setItem(\"username\",this.state.fields.username)\r\n                // localStorage.setItem(\"token\",response.data.jwttoken);\r\n                // localStorage.setItem(\"logintime\",response.data.loginTime);\r\n                \r\n                if(response.status === 200) {\r\n                    this.setState({ navigate: true, loading: false });\r\n                    this.setState({ listdata: response.data.response,backendStatus:response.data.status  });\r\n                    console.log(\"Data---\",response.data.response);\r\n\r\n                }\r\n                \r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                alert(\"Error Occurred. \", err);\r\n            });\r\n\r\n    };\r\n\r\n    render() {\r\n         const { navigate } = this.state;\r\n         const items = this.state.listdata.map((item) =>\r\n         <li>{item}</li>\r\n       );\r\n        // here is the important part\r\n        // if (navigate) {\r\n        //   return <Redirect to=\"/dash\" push={true} />;\r\n        // }\r\n        const TodoComponent = {\r\n            width: \"500px\",\r\n            margin: \"40px auto\",\r\n            padding: \"50px auto\",\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n            minHeight: \"200px\",\r\n            boxSizing: \"border-box\"\r\n           }\r\n           const buttonComponent = {\r\n            background: 'linear-gradient(45deg, #FE6B6B 30%, #FF8E46 90%)',\r\n            margin: \"10px 0 0px 200px\",\r\n            borderRadius: \"15px\"\r\n           }\r\n\r\n           const Header = {\r\n            padding: \"10px 20px\",\r\n            textAlign: \"center\",\r\n            color: \"white\",\r\n            fontSize: \"22px\"\r\n           }\r\n           const messageBreakerHeader = {\r\n            fontSize: \"12px\",\r\n            marginLeft: \"350px\"\r\n           }\r\n\r\n           const ErrorMessage = {\r\n            color: \"white\",\r\n            fontSize: \"13px\"\r\n           }\r\n        return (\r\n            <div style={TodoComponent}>\r\n               \r\n                <div style={Header}>\r\n                    Response Code Viewer\r\n                </div>\r\n                <div>\r\n                  \r\n                    <div>\r\n                        <div>\r\n                        <div style={messageBreakerHeader}>\r\n                        <Link to=\"/\">Go Back</Link>\r\n                    </div>\r\n                            <label  htmlFor=\"responseCode\">Enter Data: &nbsp;</label>\r\n                            \r\n                            &nbsp;\r\n                            <input\r\n                                id=\"responseCode\"\r\n                                name=\"responseCode\"\r\n                                type=\"text\"\r\n                                onKeyUp={this.handleChange}\r\n                                required\r\n                                \r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <button\r\n                                role=\"button\"\r\n                                style={buttonComponent}\r\n                                //onClick={this.authenticate}\r\n                                onClick={this.submitForm}\r\n                            >\r\n                                Submit\r\n                                                </button>\r\n                        </div>\r\n                    </div>\r\n                    <div style={ErrorMessage}>\r\n                        {this.state.loading && <img src={loadingImg} />}\r\n                         <ul>{items}</ul> \r\n                    </div>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Homepage from \"./Components/Homepage\";\r\nimport Messagebreaker from \"./Components/Messagebreaker\";\r\n\r\n\r\n\r\nexport function Main() {\r\n  return (\r\n    <main>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Homepage} />\r\n        <Route exact path=\"/messageBreaker\" component={Messagebreaker} />\r\n      \r\n      </Switch>\r\n    </main>\r\n  );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Main } from './Routing';\r\nimport 'react-app-polyfill/stable';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Main />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n// import {Main} from \"./Routing\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  \r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n//reportWebVitals();\r\n"],"sourceRoot":""}